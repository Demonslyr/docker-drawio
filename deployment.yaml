apiVersion: v1
kind: Namespace
metadata:
  name: atriarch-utilities
---
apiVersion: v1
kind: Service
metadata:
  name: drawio
  namespace: atriarch-utilities
  labels:
    app: draw.io
spec:
  type: ClusterIP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600
  ports:
  - name: http
    port: 8080
  selector:
    app: draw.io
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: drawio
  namespace: atriarch-utilities
spec:
  replicas: 1
  selector:
    matchLabels:
      app: draw.io
  template:
    metadata:
      labels:
        app: draw.io
    spec:
      containers:
      - image: ${CICD_IMAGE}:v1.0.${CICD_EXECUTION_SEQUENCE}
        imagePullPolicy: IfNotPresent
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
        name: drawio
        volumeMounts:
        - name: github-client-credentials
          mountPath: /usr/local/tomcat/webapps/draw/WEB-INF
          subPath: WEB-INF
          readOnly: true
        ports:
        - containerPort: 8080
      volumes:
      - name: github-client-credentials
        secret:
          secretName: draw-atriarch-git-clientcreds
      imagePullSecrets:
      - name: atriarch-systems-docker-group
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: drawio
  namespace: atriarch-utilities
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: drawio
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 60
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: drawio
  namespace: atriarch-utilities
  annotations:
    kubernetes.io/ingress.class: nginx
spec:
  rules:
  - host: draw.atriarch.systems
    http:
      paths:
      - path: /
        backend:
          serviceName: drawio
          servicePort: http
---
